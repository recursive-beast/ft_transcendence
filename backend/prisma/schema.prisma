generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                 Int            @id @default(autoincrement())
  authProviderId     String         @unique
  displayName        String         @unique
  fullName           String
  avatar             String?
  otpSecret          String?
  otpIsEnabled       Boolean        @default(false)
  createdAt          DateTime       @default(now())
  updatedAt          DateTime       @updatedAt
  friends            User[]         @relation("friends")
  friendOf           User[]         @relation("friends")
  blocked            User[]         @relation("blocked")
  blockedBy          User[]         @relation("blocked")
  notifications      Notification[]
  conversations      Conversation[] @relation("member")
  bannedFrom         Conversation[] @relation("banned")
  adminConversations Conversation[] @relation("admin")
  Message            Message[]      @relation("sender")
}

model Notification {
  id          Int              @id @default(autoincrement())
  type        NotificationType
  seen        Boolean          @default(false)
  recipient   User             @relation(fields: [recepientId], references: [id])
  recepientId Int
  data        Json
  createdAt   DateTime         @default(now())
  updatedAt   DateTime         @updatedAt
}

enum NotificationType {
  FRIEND_ADD
}

model Message {
  id             Int          @id @default(autoincrement())
  sender         User         @relation("sender", fields: [senderId], references: [id])
  senderId       Int
  text           String
  conversation   Conversation @relation(fields: [conversationId], references: [id])
  conversationId Int
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
}

model Conversation {
  id        Int       @id @default(autoincrement())
  isGroup   Boolean   @default(false)
  admin     User      @relation("admin", fields: [adminId], references: [id])
  adminId   Int
  members   User[]    @relation("member")
  banned    User[]    @relation("banned")
  messages  Message[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}
