generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    id                  Int                  @id @default(autoincrement())
    authProviderId      String               @unique
    displayName         String               @unique
    fullName            String
    avatar              String?
    otpSecret           String?
    otpIsEnabled        Boolean              @default(false)
    createdAt           DateTime             @default(now())
    updatedAt           DateTime             @updatedAt
    friends             User[]               @relation("friends")
    friendOf            User[]               @relation("friends")
    blocked             User[]               @relation("blocked")
    blockedBy           User[]               @relation("blocked")
    notifications       Notification[]
    messages            Message[]
    directConversations DirectConversation[]
}

model Notification {
    id          Int              @id @default(autoincrement())
    type        NotificationType
    seen        Boolean          @default(false)
    recipient   User             @relation(fields: [recepientId], references: [id])
    recepientId Int
    data        Json
    createdAt   DateTime         @default(now())
    updatedAt   DateTime         @updatedAt
}

enum NotificationType {
    FRIEND_ADD
}

model Message {
    id                   Int                 @id @default(autoincrement())
    sender               User                @relation(fields: [senderId], references: [id])
    senderId             Int
    text                 String
    createdAt            DateTime            @default(now())
    updatedAt            DateTime            @updatedAt
    directConversation   DirectConversation? @relation(fields: [directConversationId], references: [id])
    directConversationId Int?
}

model DirectConversation {
    id        Int       @id @default(autoincrement())
    messages  Message[]
    members   User[]
    createdAt DateTime  @default(now())
    updatedAt DateTime  @updatedAt
}

// enum roleType {
//     OWNER
//     ADMIN
//     MEMBER
//     BANNED
// }

// model GroupMember {
//     id          Int       @id @default(autoincrement())
//     user        User      @relation(fields: [userId], references: [id])
//     userId      Int
//     role        roleType
//     groupConversation GroupConversation @relation(fields: [groupConversationId], references: [id])
//     groupConversationId Int
// }

// model GroupConversation {
//     id        Int       @id @default(autoincrement())
//     members   GroupMember[]
//     messages  Message[]
//     createdAt DateTime  @default(now())
//     updatedAt DateTime  @updatedAt
// }
